# version: '3.8'

# services:
#   # Frontend service
#   frontend:
#     build:
#       context: ./frontend
#     networks:
#       - shared-network
#     ports:
#       - "3000:3000"  # Assuming frontend uses port 3000
#     labels:
#       - "logging=promtail"  # Add this line

#   # Backend service
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     networks:
#       - shared-network
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - db
#     labels:
#       - "logging=promtail"  # Add this line

#   # Database service (PostgreSQL)
#   db:
#     image: postgres:13
#     environment:
#       POSTGRES_USER: app
#       POSTGRES_PASSWORD: changethis123
#       POSTGRES_DB: app
#     networks:
#       - shared-network
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "app"]
#       interval: 30s
#       retries: 3
#     labels:
#       - "logging=promtail"  # Add this line

#   # Adminer service (database management tool)
#   adminer:
#     image: adminer
#     networks:
#       - shared-network
#     ports:
#       - "8081:8080"
#     labels:
#       - "logging=promtail"  # Add this line

#   # NGINX service (reverse proxy)
#   nginx:
#     image: nginx
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#       - ./nginx/conf.d:/etc/nginx/conf.d
#     ports:
#       - "80:80"
#     depends_on:
#       - backend
#       - frontend
#       - prometheus
#       - grafana
#       - cadvisor
#     networks:
#       - shared-network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://jedops.mooo.com/"]
#       interval: 30s
#       retries: 3
#     labels:
#       - "logging=promtail"  # Add this line

#   # Prometheus service (monitoring tool)
#   prometheus:
#     image: prom/prometheus
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - "9090:9090"
#     networks:
#       - shared-network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://jedops.mooo.com:9090/-/healthy"]
#       interval: 30s
#       retries: 3
#     labels:
#       - "logging=promtail"  # Add this line

#   # Grafana service (dashboard for metrics)
#   grafana:
#     image: grafana/grafana
#     ports:
#       - "3001:3000"
#     environment:
#       - GF_SERVER_ROOT_URL=http://grafana:3001
#       - GF_SECURITY_ADMIN_PASSWORD=admin  # Set the admin password here
#       - GF_SECURITY_ADMIN_USER=admin      # Define the admin username (optional, default is 'admin')
#       - GF_AUTH_ANONYMOUS_ENABLED=false   # Ensure anonymous access is disabled
#     networks:
#       - shared-network
#     volumes:
#     - ./grafana/datasources:/etc/grafana/provisioning/datasources
#     labels:
#       - "logging=promtail"  # Add this line

#   # Loki service (log aggregation)
#   loki:
#     image: grafana/loki
#     ports:
#       - "3100:3100"
#     networks:
#       - shared-network
#     command: -config.file=/etc/loki/local-config.yaml
#     labels:
#       - "logging=promtail"  # Add this line
#     volumes:
#       - ./loki-config.yaml:/etc/loki/local-config.yaml
#       - loki-data:/loki

#   # Promtail service (log collection agent)
#   promtail:
#     image: grafana/promtail
#     volumes:
#       - /var/log:/var/log
#       - /var/run/docker.sock:/var/run/docker.sock  # This line is necessary
#       - ./promtail-config.yaml:/etc/promtail/config.yaml
#     networks:
#       - shared-network
#     ports:
#       - "9080:9080"

#   # cAdvisor service (container monitoring)
#   cadvisor:
#     image: google/cadvisor:latest
#     ports:
#       - "8082:8080"
#     networks:
#       - shared-network
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - /sys:/sys
#       - /var/lib/docker/:/var/lib/docker/
#     labels:
#       - "logging=promtail"  # Add this line

# networks:
#   shared-network:
#     external: true

# volumes:
#   db-data:
#     driver: local
#   loki-data:
version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
    networks:
      - shared-network
    labels:
      - "logging=promtail"

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - shared-network
    env_file:
      - ./backend/.env
    depends_on:
      - db
    labels:
      - "logging=promtail"

  # Database service (PostgreSQL)
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    networks:
      - shared-network
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app"]
      interval: 30s
      retries: 3
    labels:
      - "logging=promtail"

  # Adminer service (database management tool)
  adminer:
    image: adminer
    networks:
      - shared-network
    ports:
      - "8081:8080"
    labels:
      - "logging=promtail"

  # NGINX service (reverse proxy)
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - prometheus
      - grafana
      - cadvisor
    networks:
      - shared-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      retries: 3
    labels:
      - "logging=promtail"

  # Prometheus service (monitoring tool)
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - shared-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      retries: 3
    labels:
      - "logging=promtail"

  # Grafana service (dashboard for metrics)
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SERVER_ROOT_URL=http://jedops.mooo.com/grafana
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
    networks:
      - shared-network
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    labels:
      - "logging=promtail"

  # Loki service (log aggregation)
  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    networks:
      - shared-network
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    labels:
      - "logging=promtail"

  # Promtail service (log collection agent)
  promtail:
    image: grafana/promtail
    volumes:
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    networks:
      - shared-network
    ports:
      - "9080:9080"

  # cAdvisor service (container monitoring)
  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8082:8080"
    networks:
      - shared-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker/
    labels:
      - "logging=promtail"

networks:
  shared-network:
    external: true

volumes:
  db-data:
    driver: local
  loki-data:
